# Generated by Django 2.0.5 on 2020-01-09 04:37

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnimalDetailData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.CharField(blank=True, max_length=500, null=True)),
                ('parent_index', models.CharField(blank=True, max_length=500, null=True)),
                ('animal_type', models.CharField(blank=True, max_length=500, null=True)),
                ('animal_number', models.CharField(blank=True, max_length=500, null=True)),
                ('is_it_for_commercial_purpose', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('boundary', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='HouseHoldData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.CharField(blank=True, max_length=1000, null=True)),
                ('deviceid', models.CharField(blank=True, max_length=1000, null=True)),
                ('date', models.CharField(blank=True, max_length=1000, null=True)),
                ('surveyor_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('place_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('ward', models.CharField(blank=True, max_length=1000, null=True)),
                ('house_number', models.CharField(blank=True, max_length=1000, null=True)),
                ('latitude', models.CharField(blank=True, max_length=1000, null=True)),
                ('longitude', models.CharField(blank=True, max_length=1000, null=True)),
                ('altitude', models.CharField(blank=True, max_length=1000, null=True)),
                ('gps_precision', models.CharField(blank=True, max_length=1000, null=True)),
                ('household_number', models.CharField(blank=True, max_length=1000, null=True)),
                ('owner_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('owner_age', models.CharField(blank=True, max_length=1000, null=True)),
                ('owner_sex', models.CharField(blank=True, max_length=1000, null=True)),
                ('owner_status', models.CharField(blank=True, max_length=1000, null=True)),
                ('owner_status_other', models.CharField(blank=True, max_length=1000, null=True)),
                ('owner_caste', models.CharField(blank=True, max_length=1000, null=True)),
                ('owner_caste_other', models.CharField(blank=True, max_length=1000, null=True)),
                ('religion', models.CharField(blank=True, max_length=1000, null=True)),
                ('religion_other', models.CharField(blank=True, max_length=1000, null=True)),
                ('mother_tongue', models.CharField(blank=True, max_length=1000, null=True)),
                ('mother_tongue_other', models.CharField(blank=True, max_length=1000, null=True)),
                ('contact_no', models.CharField(blank=True, max_length=1000, null=True)),
                ('owner_education', models.CharField(blank=True, max_length=1000, null=True)),
                ('owner_citizenship_no', models.CharField(blank=True, max_length=1000, null=True)),
                ('responder_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('responder_sex', models.CharField(blank=True, max_length=1000, null=True)),
                ('responder_age', models.CharField(blank=True, max_length=1000, null=True)),
                ('responder_contact', models.CharField(blank=True, max_length=1000, null=True)),
                ('other_family_living', models.CharField(blank=True, max_length=1000, null=True)),
                ('main_occupation', models.CharField(blank=True, max_length=1000, null=True)),
                ('other_occupation', models.CharField(blank=True, max_length=1000, null=True)),
                ('business', models.CharField(blank=True, max_length=1000, null=True)),
                ('other_business', models.CharField(blank=True, max_length=1000, null=True)),
                ('other_small_business', models.CharField(blank=True, max_length=1000, null=True)),
                ('crop_sufficiency', models.CharField(blank=True, max_length=1000, null=True)),
                ('food_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('main_staple', models.CharField(blank=True, max_length=1000, null=True)),
                ('pulses', models.CharField(blank=True, max_length=1000, null=True)),
                ('vegetables', models.CharField(blank=True, max_length=1000, null=True)),
                ('fruits', models.CharField(blank=True, max_length=1000, null=True)),
                ('meat_and_fish', models.CharField(blank=True, max_length=1000, null=True)),
                ('milk_and_products', models.CharField(blank=True, max_length=1000, null=True)),
                ('sugar_products', models.CharField(blank=True, max_length=1000, null=True)),
                ('oil_products', models.CharField(blank=True, max_length=1000, null=True)),
                ('condiments', models.CharField(blank=True, max_length=1000, null=True)),
                ('monthly_expenses', models.CharField(blank=True, max_length=1000, null=True)),
                ('monthly_income', models.CharField(blank=True, max_length=1000, null=True)),
                ('loan', models.CharField(blank=True, max_length=1000, null=True)),
                ('loan_amount', models.CharField(blank=True, max_length=1000, null=True)),
                ('loan_duration', models.CharField(blank=True, max_length=1000, null=True)),
                ('animal_presence', models.CharField(blank=True, max_length=1000, null=True)),
                ('insurance', models.CharField(blank=True, max_length=1000, null=True)),
                ('other_insurance', models.CharField(blank=True, max_length=1000, null=True)),
                ('vehicle', models.CharField(blank=True, max_length=1000, null=True)),
                ('vehicles_other', models.CharField(blank=True, max_length=1000, null=True)),
                ('facilities_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('other_facilities', models.CharField(blank=True, max_length=1000, null=True)),
                ('fuel_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('other_fuel_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('land_ownership', models.CharField(blank=True, max_length=1000, null=True)),
                ('house_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('house_type_other', models.CharField(blank=True, max_length=1000, null=True)),
                ('house_built_year', models.CharField(blank=True, max_length=1000, null=True)),
                ('house_stories', models.CharField(blank=True, max_length=1000, null=True)),
                ('no_of_rooms', models.CharField(blank=True, max_length=1000, null=True)),
                ('house_map_registered', models.CharField(blank=True, max_length=1000, null=True)),
                ('building_standard_code', models.CharField(blank=True, max_length=1000, null=True)),
                ('earthquake_resistance', models.CharField(blank=True, max_length=1000, null=True)),
                ('flood_prone', models.CharField(blank=True, max_length=1000, null=True)),
                ('flood_resilience_activities', models.CharField(blank=True, max_length=1000, null=True)),
                ('flood_activities_resilience_other', models.CharField(blank=True, max_length=1000, null=True)),
                ('owned_land_area', models.CharField(blank=True, max_length=1000, null=True)),
                ('owned_land_near_river', models.CharField(blank=True, max_length=1000, null=True)),
                ('owned_land_area_near_river', models.CharField(blank=True, max_length=1000, null=True)),
                ('owned_land_image', models.ImageField(blank=True, null=True, upload_to='house_hold')),
                ('technical_manpower_presence', models.CharField(blank=True, max_length=1000, null=True)),
                ('manpower_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('doctor_sex', models.CharField(blank=True, max_length=1000, null=True)),
                ('doctor_male_number', models.CharField(blank=True, max_length=1000, null=True)),
                ('doctor_female_number', models.CharField(blank=True, max_length=1000, null=True)),
                ('engineer_sex', models.CharField(blank=True, max_length=1000, null=True)),
                ('engineer_male_number', models.CharField(blank=True, max_length=1000, null=True)),
                ('engineer_female_number', models.CharField(blank=True, max_length=1000, null=True)),
                ('subengineer_sex', models.CharField(blank=True, max_length=1000, null=True)),
                ('subengineer_male', models.CharField(blank=True, max_length=1000, null=True)),
                ('subengineer_female', models.CharField(blank=True, max_length=1000, null=True)),
                ('nurse_sex', models.CharField(blank=True, max_length=1000, null=True)),
                ('nurse_male_number', models.CharField(blank=True, max_length=1000, null=True)),
                ('nurse_female_number', models.CharField(blank=True, max_length=1000, null=True)),
                ('ha_lab_sex', models.CharField(blank=True, max_length=1000, null=True)),
                ('ha_lab_male_number', models.CharField(blank=True, max_length=1000, null=True)),
                ('ha_lab_female_number', models.CharField(blank=True, max_length=1000, null=True)),
                ('veterinary_sex', models.CharField(blank=True, max_length=1000, null=True)),
                ('veterinary_male_number', models.CharField(blank=True, max_length=1000, null=True)),
                ('veterinary_female_number', models.CharField(blank=True, max_length=1000, null=True)),
                ('dakarmi_sikarmi_sex', models.CharField(blank=True, max_length=1000, null=True)),
                ('dakarmi_sikarmi_male_number', models.CharField(blank=True, max_length=1000, null=True)),
                ('dakarmi_sikarmi_female_number', models.CharField(blank=True, max_length=1000, null=True)),
                ('plumber_sex', models.CharField(blank=True, max_length=1000, null=True)),
                ('plumber_male_number', models.CharField(blank=True, max_length=1000, null=True)),
                ('plumber_female_number', models.CharField(blank=True, max_length=1000, null=True)),
                ('electrician_sex', models.CharField(blank=True, max_length=1000, null=True)),
                ('electrician_male_number', models.CharField(blank=True, max_length=1000, null=True)),
                ('electrician_female_number', models.CharField(blank=True, max_length=1000, null=True)),
                ('jt_sex', models.CharField(blank=True, max_length=1000, null=True)),
                ('jt_male_number', models.CharField(blank=True, max_length=1000, null=True)),
                ('jt_female_number', models.CharField(blank=True, max_length=1000, null=True)),
                ('other_technical', models.CharField(blank=True, max_length=1000, null=True)),
                ('other_technical_sex', models.CharField(blank=True, max_length=1000, null=True)),
                ('other_technical_male_number', models.CharField(blank=True, max_length=1000, null=True)),
                ('other_technical_female_number', models.CharField(blank=True, max_length=1000, null=True)),
                ('distance_from_main_road', models.CharField(blank=True, max_length=500, null=True)),
                ('road_type', models.CharField(blank=True, max_length=500, null=True)),
                ('road_width', models.CharField(blank=True, max_length=500, null=True)),
                ('road_capacity', models.CharField(blank=True, max_length=500, null=True)),
                ('distance_from_nearest_school', models.CharField(blank=True, max_length=500, null=True)),
                ('distance_from_nearest_health_institution', models.CharField(blank=True, max_length=500, null=True)),
                ('distance_from_nearest_security_forces', models.CharField(blank=True, max_length=500, null=True)),
                ('water_sources', models.CharField(blank=True, max_length=500, null=True)),
                ('water_sources_other', models.CharField(blank=True, max_length=500, null=True)),
                ('tubewell_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('tubewell_status', models.CharField(blank=True, max_length=1000, null=True)),
                ('no_of_houses_using_tubewell', models.CharField(blank=True, max_length=1000, null=True)),
                ('has_flood_effect_tubewell', models.CharField(blank=True, max_length=1000, null=True)),
                ('public_tap_distance', models.CharField(blank=True, max_length=1000, null=True)),
                ('toilet_facility', models.CharField(blank=True, max_length=1000, null=True)),
                ('toilet_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('toilet_type_other', models.CharField(blank=True, max_length=1000, null=True)),
                ('waterborne_disease', models.CharField(blank=True, max_length=1000, null=True)),
                ('disaster_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('disaster_type_other', models.CharField(blank=True, max_length=1000, null=True)),
                ('hazard_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('hazard_type_other', models.CharField(blank=True, max_length=1000, null=True)),
                ('is_there_identified_risk_areas', models.CharField(blank=True, max_length=1000, null=True)),
                ('disaster_information_medium', models.CharField(blank=True, max_length=1000, null=True)),
                ('disaster_information_medium_other', models.CharField(blank=True, max_length=1000, null=True)),
                ('knowledge_on_early_warning_system', models.CharField(blank=True, max_length=1000, null=True)),
                ('early_warning_system_installed_nearby', models.CharField(blank=True, max_length=1000, null=True)),
                ('got_early_warning_during_disaster', models.CharField(blank=True, max_length=1000, null=True)),
                ('got_early_warning_during_through', models.CharField(blank=True, max_length=1000, null=True)),
                ('medium_suitable_for_early_warning', models.CharField(blank=True, max_length=1000, null=True)),
                ('other_medium_suitable_for_early_warning', models.CharField(blank=True, max_length=1000, null=True)),
                ('evacuation_shelter_availability', models.CharField(blank=True, max_length=1000, null=True)),
                ('distance_to_evacuation_shelter', models.CharField(blank=True, max_length=1000, null=True)),
                ('capacity_of_evacuation_shelter', models.CharField(blank=True, max_length=1000, null=True)),
                ('distance_to_nearest_open_space', models.CharField(blank=True, max_length=1000, null=True)),
                ('distance_to_nearest_market', models.CharField(blank=True, max_length=1000, null=True)),
                ('goods_available_in_nearest_market', models.CharField(blank=True, max_length=500, null=True)),
                ('other_goods_available_in_nearest_market', models.CharField(blank=True, max_length=1000, null=True)),
                ('distance_to_alternative_market', models.CharField(blank=True, max_length=1000, null=True)),
                ('alternative_market_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('nearest_market_operation_during_disaster', models.CharField(blank=True, max_length=1000, null=True)),
                ('easy_access_to_goods', models.CharField(blank=True, max_length=1000, null=True)),
                ('how_goods_were_managed_if_not_available_in_market', models.CharField(blank=True, max_length=1000, null=True)),
                ('warehouse_available_in_ward', models.CharField(blank=True, max_length=1000, null=True)),
                ('coping_mechanism_during_disaster', models.CharField(blank=True, max_length=1000, null=True)),
                ('other_coping_mechanism_during_disaster', models.CharField(blank=True, max_length=1000, null=True)),
                ('emergency_kit_availability_in_house', models.CharField(blank=True, max_length=1000, null=True)),
                ('emergency_kit_material_update_frequency', models.CharField(blank=True, max_length=1000, null=True)),
                ('involved_disaster_training', models.CharField(blank=True, max_length=1000, null=True)),
                ('involved_disaster_training_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('involved_disaster_training_type_other', models.CharField(blank=True, max_length=1000, null=True)),
                ('involved_in_simulation_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('involved_in_simulation_type_other', models.CharField(blank=True, max_length=1000, null=True)),
                ('knowledge_about_ldcrp', models.CharField(blank=True, max_length=1000, null=True)),
                ('involvement_in_ldcrp_development_process', models.CharField(blank=True, max_length=1000, null=True)),
                ('knowledge_about_dprp', models.CharField(blank=True, max_length=1000, null=True)),
                ('involvement_in_dprp_development_process', models.CharField(blank=True, max_length=1000, null=True)),
                ('prepared_contingency_plan', models.CharField(blank=True, max_length=1000, null=True)),
                ('most_occuring_disasters_in_ward', models.CharField(blank=True, max_length=1000, null=True)),
                ('identified_safe_place_for_flood', models.CharField(blank=True, max_length=1000, null=True)),
                ('distance_to_safe_place_for_flood', models.CharField(blank=True, max_length=1000, null=True)),
                ('damages_occurred_during_flood', models.CharField(blank=True, max_length=500, null=True)),
                ('other_damages_occurred_during_flood', models.CharField(blank=True, max_length=500, null=True)),
                ('house_damage_type_during_flood', models.CharField(blank=True, max_length=500, null=True)),
                ('house_damage_type_during_flood_other', models.CharField(blank=True, max_length=500, null=True)),
                ('migrated_place_during_flood', models.CharField(blank=True, max_length=500, null=True)),
                ('migrated_place_during_flood_other', models.CharField(blank=True, max_length=500, null=True)),
                ('damage_occurred_during_landslide', models.CharField(blank=True, max_length=500, null=True)),
                ('other_damage_occurred_during_landslide', models.CharField(blank=True, max_length=500, null=True)),
                ('house_damage_type_during_landslide', models.CharField(blank=True, max_length=500, null=True)),
                ('house_damage_type_during_landslide_other', models.CharField(blank=True, max_length=500, null=True)),
                ('migrated_place_during_landslide', models.CharField(blank=True, max_length=500, null=True)),
                ('damages_occurred_during_earthquake', models.CharField(blank=True, max_length=500, null=True)),
                ('other_damages_occurred_during_earthquake', models.CharField(blank=True, max_length=500, null=True)),
                ('house_damage_type_during_earthquake', models.CharField(blank=True, max_length=500, null=True)),
                ('house_damage_type_during_earthquake_other', models.CharField(blank=True, max_length=500, null=True)),
                ('migrated_place_during_earthquake', models.CharField(blank=True, max_length=500, null=True)),
                ('damages_occurred_during_fire', models.CharField(blank=True, max_length=500, null=True)),
                ('other_damages_occured_during_fire', models.CharField(blank=True, max_length=500, null=True)),
                ('house_damage_type_during_fire', models.CharField(blank=True, max_length=500, null=True)),
                ('house_damage_type_during_fire_other', models.CharField(blank=True, max_length=500, null=True)),
                ('fire_extinguisher_in_house', models.CharField(blank=True, max_length=500, null=True)),
                ('migrated_place_during_fire', models.CharField(blank=True, max_length=500, null=True)),
                ('migrated_place_during_fire_other', models.CharField(blank=True, max_length=500, null=True)),
                ('remarks', models.CharField(blank=True, max_length=500, null=True)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='house_hold', to='core.District')),
            ],
        ),
        migrations.CreateModel(
            name='Municipality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('hlcit_code', models.CharField(blank=True, max_length=1000, null=True)),
                ('boundary', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='municipality', to='core.District')),
            ],
        ),
        migrations.CreateModel(
            name='OtherFamilyMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.CharField(blank=True, max_length=500, null=True)),
                ('parent_index', models.CharField(blank=True, max_length=500, null=True)),
                ('other_family_numbers', models.CharField(blank=True, max_length=500, null=True)),
                ('females_less_then_5_years', models.CharField(blank=True, max_length=500, null=True)),
                ('males_less_then_5_years', models.CharField(blank=True, max_length=500, null=True)),
                ('females_between_5_to_15_years', models.CharField(blank=True, max_length=500, null=True)),
                ('males_between_5_to_15_years', models.CharField(blank=True, max_length=500, null=True)),
                ('females_between_16_to_59_years', models.CharField(blank=True, max_length=500, null=True)),
                ('males_between_16_to_59_years', models.CharField(blank=True, max_length=500, null=True)),
                ('females_between_60_to_70_years', models.CharField(blank=True, max_length=500, null=True)),
                ('males_between_60_to_70_years', models.CharField(blank=True, max_length=500, null=True)),
                ('females_above_70_years', models.CharField(blank=True, max_length=500, null=True)),
                ('males_above70_years', models.CharField(blank=True, max_length=500, null=True)),
                ('total_persons', models.CharField(blank=True, max_length=500, null=True)),
                ('pregnant_number', models.CharField(blank=True, max_length=500, null=True)),
                ('disabled', models.CharField(blank=True, max_length=500, null=True)),
                ('disablility_type', models.CharField(blank=True, max_length=500, null=True)),
                ('disablility_type_other', models.CharField(blank=True, max_length=500, null=True)),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='other_family_member', to='core.HouseHoldData')),
            ],
        ),
        migrations.CreateModel(
            name='OwnerFamilyData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.CharField(blank=True, max_length=500, null=True)),
                ('parent_index', models.CharField(blank=True, max_length=500, null=True)),
                ('name', models.CharField(blank=True, max_length=500, null=True)),
                ('age_group', models.CharField(blank=True, max_length=500, null=True)),
                ('gender', models.CharField(blank=True, max_length=500, null=True)),
                ('citizenship_number', models.CharField(blank=True, max_length=500, null=True)),
                ('education_level', models.CharField(blank=True, max_length=500, null=True)),
                ('occupation', models.CharField(blank=True, max_length=500, null=True)),
                ('occupation_other', models.CharField(blank=True, max_length=500, null=True)),
                ('working_status', models.CharField(blank=True, max_length=500, null=True)),
                ('monthly_income', models.CharField(blank=True, max_length=500, null=True)),
                ('falling_under_social_security_criteria', models.CharField(blank=True, max_length=500, null=True)),
                ('social_security_received', models.CharField(blank=True, max_length=500, null=True)),
                ('reasons_for_not_received_social_security', models.CharField(blank=True, max_length=500, null=True)),
                ('other_reasons_for_not_received_social_security', models.CharField(blank=True, max_length=500, null=True)),
                ('status_of_family_member', models.CharField(blank=True, max_length=500, null=True)),
                ('status_of_family_member_other', models.CharField(blank=True, max_length=200, null=True)),
                ('disability_type', models.CharField(blank=True, max_length=500, null=True)),
                ('disability_type_other', models.CharField(blank=True, max_length=500, null=True)),
                ('chronic_illness', models.CharField(blank=True, max_length=200, null=True)),
                ('chronic_illness_other', models.CharField(blank=True, max_length=200, null=True)),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='house_hold_data', to='core.HouseHoldData')),
            ],
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('code', models.IntegerField(blank=True, null=True)),
                ('boundary', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role', to='core.District')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role', to='auth.Group')),
                ('municipality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role', to='core.Municipality')),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role', to='core.Province')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='municipality',
            name='province',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='municipality', to='core.Province'),
        ),
        migrations.AddField(
            model_name='householddata',
            name='municipality',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='house_hold', to='core.Municipality'),
        ),
        migrations.AddField(
            model_name='householddata',
            name='province',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='house_hold', to='core.Province'),
        ),
        migrations.AddField(
            model_name='district',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='district', to='core.Province'),
        ),
        migrations.AddField(
            model_name='animaldetaildata',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='animal_detail_data', to='core.HouseHoldData'),
        ),
    ]
